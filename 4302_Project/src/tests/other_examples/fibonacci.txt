class Fibonacci{
	declare {
		int x = 1;
		int y = 1;
		int result;
		int i;
	}
	
	func void fibonacci(int z){
		require {
			z > 2;	
		}
		loop {
			from {
				i = 1;
				result = 1;
			}

			until {
				i >= z;
			}

			invariant {
				i <= z; //if you change it to i <= z + 1, alloy will find the counter example that violates postcond
				i > 0;
				result == x || result == y;
			}

			do {
				if (x < y){
					x = x + y;
					result = x;	
				} else {
					y = x + y;
					result = y;
				}
				i = i + 1;
			}

			variant {
				z - i;
			}
		}
		
		ensure {
			x > y => result == x;
			y > x => result == y;
			x > 0 && y > 0;
			i == z;
		}
	}
	
}