class SortingNet{
	declare{
		int[] arr = {8, 4, 2, 2};
		int tmp;
		int old_i;
		int old_j;
	}
	
	func void sort(){
		swap(1,2);
		swap(0,2);
		swap(0,1);
//		swap(1,3);
//		swap(1,2);
		
		ensure{
			arr[0] <= arr[1];
			arr[1] <= arr[2];
//			arr[2] > arr[3];	
		}
	}

//((((1) >= (0)) and ((2) >= (0))) and (((n.arr[1]) <= (n.arr[2])) => (((n.arr[0]) <= (n.arr[2])) => (((n.arr[0]) <= (n.arr[1])) and ((n.arr[1]) <= (n.arr[2]))))))


	func void swap(int i, int j){
		require{
			i >= 0 && j >= 0;
		}
		
		old_i = arr[i];
		old_j = arr[j];
		
		if (arr[i] > arr[j]) { 
			tmp = arr[i];
			arr[i] = arr[j]; 
			arr[j] = tmp; 
		}
		
		ensure{
			arr[i] <= arr[j];
//			(old_i > old_j) => (arr[i] == old_j) && (arr[j] == old_i);
//			(old_i <= old_j) => (arr[i] == old_i) && (arr[j] == old_j);
		}
	}
	
}